  ->  Nested Loop  (cost=42.26..327.97 rows=3 width=118) (actual time=624.289..1117.904 rows=743 loops=1)
        Join Filter: (ml.movie_id = mi.movie_id)
        ->  Nested Loop  (cost=41.82..326.19 rows=1 width=138) (actual time=513.563..927.991 rows=172 loops=1)
              ->  Nested Loop  (cost=41.40..305.43 rows=47 width=142) (actual time=72.523..874.303 rows=3296 loops=1)
                    Join Filter: (ml.movie_id = mk.movie_id)
                    ->  Nested Loop  (cost=40.97..303.51 rows=1 width=134) (actual time=61.692..795.461 rows=277 loops=1)
                          Join Filter: (ml.movie_id = t.id)
                          ->  Nested Loop  (cost=40.54..302.91 rows=1 width=113) (actual time=45.386..645.390 rows=277 loops=1)
                                ->  Nested Loop  (cost=40.12..302.45 rows=1 width=98) (actual time=21.015..349.469 rows=763 loops=1)
                                      ->  Nested Loop  (cost=39.97..301.76 rows=4 width=102) (actual time=20.483..345.699 rows=864 loops=1)
                                            Join Filter: (ml.movie_id = mc.movie_id)
                                            ->  Nested Loop  (cost=39.54..300.45 rows=1 width=90) (actual time=9.038..60.498 rows=228 loops=1)
                                                  ->  Nested Loop  (cost=39.39..300.27 rows=1 width=94) (actual time=9.016..59.693 rows=257 loops=1)
                                                        ->  Nested Loop  (cost=39.24..289.02 rows=66 width=98) (actual time=8.057..57.677 rows=257 loops=1)
                                                              ->  Nested Loop  (cost=38.82..262.88 rows=42 width=86) (actual time=1.607..15.727 rows=2315 loops=1)
                                                                    ->  Seq Scan on link_type lt  (cost=0.00..18.88 rows=1 width=86) (actual time=0.450..0.458 rows=2 loops=1)
                                                                          Filter: ((link)::text ~~ '%follow%'::text)
                                                                          Rows Removed by Filter: 16
                                                                    ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=8) (actual time=0.688..7.276 rows=1158 loops=2)
                                                                          Recheck Cond: (link_type_id = lt.id)
                                                                          Heap Blocks: exact=191
                                                                          ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.661..0.661 rows=1158 loops=2)
                                                                                Index Cond: (link_type_id = lt.id)
                                                              ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.60 rows=2 width=12) (actual time=0.007..0.018 rows=0 loops=2315)
                                                                    Index Cond: (movie_id = ml.movie_id)
                                                        ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.15..0.17 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=257)
                                                              Index Cond: (id = cc.status_id)
                                                              Filter: ((kind)::text ~~ 'complete%'::text)
                                                  ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.15..0.17 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=257)
                                                        Index Cond: (id = cc.subject_id)
                                                        Filter: ((kind)::text = 'cast'::text)
                                                        Rows Removed by Filter: 0
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.29 rows=2 width=12) (actual time=1.058..1.248 rows=4 loops=228)
                                                  Index Cond: (movie_id = cc.movie_id)
                                                  Filter: (note IS NULL)
                                                  Rows Removed by Filter: 3
                                      ->  Index Scan using company_type_pkey on company_type ct  (cost=0.15..0.17 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=864)
                                            Index Cond: (id = mc.company_type_id)
                                            Filter: ((kind)::text = 'production companies'::text)
                                            Rows Removed by Filter: 0
                                ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.387..0.387 rows=0 loops=763)
                                      Index Cond: (id = mc.company_id)
                                      Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                      Rows Removed by Filter: 1
                          ->  Index Scan using title_pkey on title t  (cost=0.43..0.59 rows=1 width=21) (actual time=0.540..0.540 rows=1 loops=277)
                                Index Cond: (id = mc.movie_id)
                                Filter: ((production_year >= 1950) AND (production_year <= 2010))
                    ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.33 rows=47 width=8) (actual time=0.275..0.278 rows=12 loops=277)
                          Index Cond: (movie_id = t.id)
              ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.016..0.016 rows=0 loops=3296)
                    Index Cond: (id = mk.keyword_id)
                    Filter: ((keyword)::text = 'sequel'::text)
                    Rows Removed by Filter: 1
        ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.74 rows=3 width=4) (actual time=0.909..1.102 rows=4 loops=172)
              Index Cond: (movie_id = mk.movie_id)
              Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
              Rows Removed by Filter: 15
Planning time: 562.210 ms
Execution time: 1128.764 ms
