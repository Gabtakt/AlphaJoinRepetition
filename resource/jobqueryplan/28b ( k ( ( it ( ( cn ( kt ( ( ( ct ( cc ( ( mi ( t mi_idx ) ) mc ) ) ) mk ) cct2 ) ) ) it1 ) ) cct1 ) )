  ->  Nested Loop  (cost=22.51..3121.71 rows=1 width=41) (actual time=14572.546..56100.350 rows=148 loops=1)
        ->  Nested Loop  (cost=22.09..3120.81 rows=2 width=45) (actual time=14490.175..55258.046 rows=15989 loops=1)
              ->  Nested Loop  (cost=21.66..3118.94 rows=1 width=61) (actual time=502.185..55053.082 rows=165 loops=1)
                    ->  Nested Loop  (cost=21.51..3118.77 rows=1 width=65) (actual time=502.142..55052.084 rows=196 loops=1)
                          ->  Nested Loop  (cost=21.36..3118.60 rows=1 width=69) (actual time=501.603..55050.043 rows=196 loops=1)
                                ->  Nested Loop  (cost=20.94..3118.06 rows=1 width=54) (actual time=496.600..54492.693 rows=197 loops=1)
                                      ->  Nested Loop  (cost=20.79..3117.88 rows=1 width=58) (actual time=496.051..54490.963 rows=204 loops=1)
                                            Join Filter: (mi.movie_id = t.id)
                                            ->  Nested Loop  (cost=20.36..3116.82 rows=1 width=33) (actual time=481.136..52346.935 rows=1356 loops=1)
                                                  ->  Nested Loop  (cost=20.22..3116.63 rows=1 width=37) (actual time=481.113..52328.861 rows=4197 loops=1)
                                                        ->  Nested Loop  (cost=19.78..3112.60 rows=1 width=29) (actual time=118.261..7395.856 rows=18881 loops=1)
                                                              ->  Nested Loop  (cost=19.35..3109.00 rows=4 width=17) (actual time=94.180..2463.256 rows=18297 loops=1)
                                                                    Join Filter: (mi_idx.info_type_id = it.id)
                                                                    Rows Removed by Join Filter: 6493
                                                                    ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.020..0.023 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                                    ->  Nested Loop  (cost=19.35..3100.24 rows=508 width=21) (actual time=94.158..2452.833 rows=24790 loops=1)
                                                                          ->  Hash Join  (cost=18.93..2457.50 rows=761 width=8) (actual time=70.359..123.929 rows=49145 loops=1)
                                                                                Hash Cond: (cc.subject_id = cct1.id)
                                                                                ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=12) (actual time=0.606..71.828 rows=135086 loops=1)
                                                                                ->  Hash  (cost=18.88..18.88 rows=4 width=4) (actual time=0.550..0.550 rows=1 loops=1)
                                                                                      Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                      ->  Seq Scan on comp_cast_type cct1  (cost=0.00..18.88 rows=4 width=4) (actual time=0.533..0.535 rows=1 loops=1)
                                                                                            Filter: ((kind)::text = 'crew'::text)
                                                                                            Rows Removed by Filter: 3
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.83 rows=1 width=13) (actual time=0.046..0.047 rows=1 loops=49145)
                                                                                Index Cond: (movie_id = cc.movie_id)
                                                                                Filter: ((info)::text > '6.5'::text)
                                                                                Rows Removed by Filter: 2
                                                              ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.89 rows=1 width=12) (actual time=0.233..0.268 rows=1 loops=18297)
                                                                    Index Cond: (movie_id = mi_idx.movie_id)
                                                                    Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                                                    Rows Removed by Filter: 5
                                                        ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..4.02 rows=1 width=8) (actual time=2.200..2.379 rows=0 loops=18881)
                                                              Index Cond: (movie_id = mi_idx.movie_id)
                                                              Filter: ((info)::text = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                                                              Rows Removed by Filter: 167
                                                  ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=4197)
                                                        Index Cond: (id = mi.info_type_id)
                                                        Filter: ((info)::text = 'countries'::text)
                                                        Rows Removed by Filter: 1
                                            ->  Index Scan using title_pkey on title t  (cost=0.43..1.05 rows=1 width=25) (actual time=1.580..1.580 rows=0 loops=1356)
                                                  Index Cond: (id = mi_idx.movie_id)
                                                  Filter: (production_year > 2005)
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.15..0.17 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=204)
                                            Index Cond: (id = t.kind_id)
                                            Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                            Rows Removed by Filter: 0
                                ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=2.827..2.827 rows=1 loops=197)
                                      Index Cond: (id = mc.company_id)
                                      Filter: ((country_code)::text <> '[us]'::text)
                                      Rows Removed by Filter: 0
                          ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.15..0.17 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=196)
                                Index Cond: (id = mc.company_type_id)
                                Heap Fetches: 196
                    ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.15..0.17 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=196)
                          Index Cond: (id = cc.status_id)
                          Filter: ((kind)::text <> 'complete+verified'::text)
                          Rows Removed by Filter: 0
              ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.40 rows=47 width=8) (actual time=1.160..1.213 rows=97 loops=165)
                    Index Cond: (movie_id = t.id)
        ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.052..0.052 rows=0 loops=15989)
              Index Cond: (id = mk.keyword_id)
              Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
              Rows Removed by Filter: 1
Planning time: 669.626 ms
Execution time: 56102.006 ms
