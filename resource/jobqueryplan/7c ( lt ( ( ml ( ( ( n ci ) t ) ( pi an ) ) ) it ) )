  ->  Nested Loop  (cost=23.11..11621.90 rows=1 width=110) (actual time=464.686..829429.641 rows=68185 loops=1)
        Join Filter: (n.id = an.person_id)
        ->  Nested Loop  (cost=22.68..11621.40 rows=1 width=122) (actual time=449.626..820719.654 rows=40157 loops=1)
              Join Filter: (pi.info_type_id = it.id)
              ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=8.491..8.507 rows=1 loops=1)
                    Filter: ((info)::text = 'mini biography'::text)
                    Rows Removed by Filter: 112
              ->  Nested Loop  (cost=22.68..11618.64 rows=28 width=126) (actual time=441.132..820688.182 rows=40157 loops=1)
                    Join Filter: (n.id = pi.person_id)
                    ->  Nested Loop  (cost=22.25..10295.93 rows=1492 width=23) (actual time=54.908..789333.732 rows=150772 loops=1)
                          ->  Nested Loop  (cost=21.82..4108.25 rows=13227 width=4) (actual time=41.905..612908.248 rows=1097209 loops=1)
                                ->  Nested Loop  (cost=21.25..3207.83 rows=361 width=8) (actual time=26.603..65843.232 rows=14194 loops=1)
                                      ->  Hash Join  (cost=20.82..563.00 rows=591 width=4) (actual time=6.675..64.120 rows=21505 loops=1)
                                            Hash Cond: (ml.link_type_id = lt.id)
                                            ->  Seq Scan on movie_link ml  (cost=0.00..462.97 rows=29997 width=8) (actual time=6.084..23.596 rows=29997 loops=1)
                                            ->  Hash  (cost=20.65..20.65 rows=14 width=4) (actual time=0.533..0.533 rows=4 loops=1)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                  ->  Seq Scan on link_type lt  (cost=0.00..20.65 rows=14 width=4) (actual time=0.514..0.520 rows=4 loops=1)
                                                        Filter: ((link)::text = ANY ('{references,"referenced in",features,"featured in"}'::text[]))
                                                        Rows Removed by Filter: 14
                                      ->  Index Scan using title_pkey on title t  (cost=0.43..4.48 rows=1 width=4) (actual time=3.057..3.057 rows=1 loops=21505)
                                            Index Cond: (id = ml.linked_movie_id)
                                            Filter: ((production_year >= 1980) AND (production_year <= 2010))
                                            Rows Removed by Filter: 0
                                ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..2.12 rows=37 width=8) (actual time=3.626..38.508 rows=77 loops=14194)
                                      Index Cond: (movie_id = t.id)
                          ->  Index Scan using name_pkey on name n  (cost=0.43..0.47 rows=1 width=19) (actual time=0.160..0.160 rows=0 loops=1097209)
                                Index Cond: (id = ci.person_id)
                                Filter: (((name_pcode_cf)::text >= 'A'::text) AND ((name_pcode_cf)::text <= 'F'::text) AND (((gender)::text = 'm'::text) OR (((gender)::text = 'f'::text) AND ((name)::text ~~ 'A%'::text))))
                                Rows Removed by Filter: 1
                    ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..0.87 rows=1 width=103) (actual time=0.199..0.207 rows=0 loops=150772)
                          Index Cond: (person_id = ci.person_id)
                          Filter: (note IS NOT NULL)
                          Rows Removed by Filter: 20
        ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.47 rows=2 width=4) (actual time=0.194..0.215 rows=2 loops=40157)
              Index Cond: (person_id = ci.person_id)
              Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%a%'::text) OR ((name)::text ~~ 'A%'::text)))
              Rows Removed by Filter: 1
Planning time: 490.426 ms
Execution time: 833265.988 ms
