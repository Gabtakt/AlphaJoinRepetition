  ->  Gather  (cost=1019.93..36170.67 rows=2 width=17) (actual time=1713.921..1738.421 rows=0 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Nested Loop  (cost=19.93..35170.47 rows=1 width=17) (actual time=685.172..685.172 rows=0 loops=3)
              ->  Nested Loop  (cost=19.79..35170.31 rows=1 width=21) (actual time=685.171..685.171 rows=0 loops=3)
                    ->  Nested Loop  (cost=19.36..35165.68 rows=2 width=25) (actual time=685.169..685.169 rows=0 loops=3)
                          ->  Hash Join  (cost=18.93..35118.91 rows=6 width=4) (actual time=685.168..685.168 rows=0 loops=3)
                                Hash Cond: (mc.company_type_id = ct.id)
                                ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=1108 width=8) (actual time=122.129..683.143 rows=8008 loops=3)
                                      Filter: (((note)::text ~~ '%(theatrical)%'::text) AND ((note)::text ~~ '%(France)%'::text))
                                      Rows Removed by Filter: 861701
                                ->  Hash  (cost=18.88..18.88 rows=4 width=4) (actual time=1.449..1.449 rows=1 loops=1)
                                      Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                      ->  Seq Scan on company_type ct  (cost=0.00..18.88 rows=4 width=4) (actual time=1.437..1.439 rows=1 loops=1)
                                            Filter: ((kind)::text = 'production companies'::text)
                                            Rows Removed by Filter: 3
                          ->  Index Scan using title_pkey on title t  (cost=0.43..7.79 rows=1 width=21) (never executed)
                                Index Cond: (id = mc.movie_id)
                                Filter: (production_year > 2005)
                    ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.31 rows=1 width=8) (never executed)
                          Index Cond: (movie_id = t.id)
                          Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German}'::text[]))
              ->  Index Only Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (never executed)
                    Index Cond: (id = mi.info_type_id)
                    Heap Fetches: 0
Planning time: 242.829 ms
Execution time: 1739.373 ms
