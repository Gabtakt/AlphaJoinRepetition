  ->  Nested Loop  (cost=23.76..1778.54 rows=1 width=82) (actual time=1360.513..5410.768 rows=8 loops=1)
        Join Filter: ((t.id = mi_idx.movie_id) AND (it.id = mi_idx.info_type_id))
        Rows Removed by Join Filter: 807
        ->  Nested Loop  (cost=23.33..1778.02 rows=1 width=93) (actual time=311.681..5335.699 rows=465 loops=1)
              ->  Nested Loop  (cost=23.18..1777.85 rows=1 width=97) (actual time=311.669..5334.199 rows=465 loops=1)
                    Join Filter: (ml.movie_id = t1.id)
                    ->  Nested Loop  (cost=22.75..1777.32 rows=1 width=88) (actual time=311.655..5261.928 rows=465 loops=1)
                          ->  Nested Loop  (cost=22.33..1776.87 rows=1 width=73) (actual time=311.635..5239.520 rows=465 loops=1)
                                ->  Nested Loop  (cost=21.90..1776.07 rows=1 width=65) (actual time=311.614..5108.740 rows=58 loops=1)
                                      ->  Nested Loop  (cost=21.75..1775.05 rows=6 width=69) (actual time=74.578..5107.450 rows=147 loops=1)
                                            ->  Nested Loop  (cost=21.32..1613.94 rows=36 width=44) (actual time=44.345..1174.134 rows=2083 loops=1)
                                                  ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..14.12 rows=1 width=4) (actual time=0.034..0.040 rows=1 loops=1)
                                                        Filter: ((info)::text = 'rating'::text)
                                                        Rows Removed by Filter: 112
                                                  ->  Nested Loop  (cost=21.18..1599.46 rows=36 width=40) (actual time=44.309..1173.141 rows=2083 loops=1)
                                                        ->  Nested Loop  (cost=20.76..1554.87 rows=100 width=25) (actual time=6.002..296.018 rows=9674 loops=1)
                                                              Join Filter: (ml.movie_id = mc1.movie_id)
                                                              ->  Nested Loop  (cost=20.33..1546.35 rows=13 width=17) (actual time=5.987..114.956 rows=2064 loops=1)
                                                                    Join Filter: (mi_idx1.info_type_id = it1.id)
                                                                    Rows Removed by Join Filter: 4128
                                                                    ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.016..0.020 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                                    ->  Nested Loop  (cost=20.33..1526.07 rows=1430 width=21) (actual time=5.968..113.306 rows=6192 loops=1)
                                                                          ->  Hash Join  (cost=19.90..562.08 rows=465 width=8) (actual time=5.947..21.636 rows=2315 loops=1)
                                                                                Hash Cond: (ml.link_type_id = lt.id)
                                                                                ->  Seq Scan on movie_link ml  (cost=0.00..462.97 rows=29997 width=12) (actual time=0.007..8.082 rows=29997 loops=1)
                                                                                ->  Hash  (cost=19.76..19.76 rows=11 width=4) (actual time=5.894..5.894 rows=2 loops=1)
                                                                                      Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                      ->  Seq Scan on link_type lt  (cost=0.00..19.76 rows=11 width=4) (actual time=5.878..5.885 rows=2 loops=1)
                                                                                            Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                            Rows Removed by Filter: 16
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..2.04 rows=3 width=13) (actual time=0.037..0.038 rows=3 loops=2315)
                                                                                Index Cond: (movie_id = ml.movie_id)
                                                              ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.044..0.085 rows=5 loops=2064)
                                                                    Index Cond: (movie_id = mi_idx1.movie_id)
                                                        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.090..0.090 rows=0 loops=9674)
                                                              Index Cond: (id = mc1.company_id)
                                                              Filter: ((country_code)::text = '[us]'::text)
                                                              Rows Removed by Filter: 1
                                            ->  Index Scan using title_pkey on title t  (cost=0.43..4.48 rows=1 width=25) (actual time=1.887..1.887 rows=0 loops=2083)
                                                  Index Cond: (id = ml.linked_movie_id)
                                                  Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.15..0.17 rows=1 width=4) (actual time=0.007..0.007 rows=0 loops=147)
                                            Index Cond: (id = t.kind_id)
                                            Filter: ((kind)::text = 'tv series'::text)
                                            Rows Removed by Filter: 1
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.75 rows=5 width=8) (actual time=1.692..2.251 rows=8 loops=58)
                                      Index Cond: (movie_id = t.id)
                          ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=23) (actual time=0.047..0.047 rows=1 loops=465)
                                Index Cond: (id = mc.company_id)
                    ->  Index Scan using title_pkey on title t1  (cost=0.43..0.52 rows=1 width=25) (actual time=0.154..0.154 rows=1 loops=465)
                          Index Cond: (id = mc1.movie_id)
              ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.15..0.17 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=465)
                    Index Cond: (id = t1.kind_id)
                    Filter: ((kind)::text = 'tv series'::text)
        ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.51 rows=1 width=13) (actual time=0.159..0.160 rows=2 loops=465)
              Index Cond: (movie_id = mc.movie_id)
              Filter: ((info)::text < '3.0'::text)
              Rows Removed by Filter: 1
Planning time: 445.567 ms
Execution time: 5412.283 ms
