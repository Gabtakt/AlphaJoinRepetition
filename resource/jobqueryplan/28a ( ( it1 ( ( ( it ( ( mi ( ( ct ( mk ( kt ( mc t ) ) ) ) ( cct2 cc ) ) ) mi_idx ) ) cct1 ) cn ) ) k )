  ->  Nested Loop  (cost=22.51..3183.67 rows=1 width=41) (actual time=4516.922..73208.523 rows=4803 loops=1)
        ->  Nested Loop  (cost=22.09..3183.12 rows=1 width=26) (actual time=4505.061..71626.520 rows=4955 loops=1)
              ->  Nested Loop  (cost=21.94..3182.95 rows=1 width=30) (actual time=4494.476..71596.779 rows=5151 loops=1)
                    Join Filter: (mi.movie_id = t.id)
                    ->  Nested Loop  (cost=21.51..3182.45 rows=1 width=29) (actual time=622.524..65419.279 rows=8728 loops=1)
                          ->  Nested Loop  (cost=21.36..3182.28 rows=1 width=33) (actual time=622.044..65386.889 rows=8728 loops=1)
                                ->  Nested Loop  (cost=20.94..3176.94 rows=12 width=37) (actual time=289.594..59753.840 rows=1138390 loops=1)
                                      ->  Nested Loop  (cost=20.51..3175.02 rows=1 width=29) (actual time=273.102..52685.275 rows=15263 loops=1)
                                            ->  Nested Loop  (cost=20.37..3173.37 rows=10 width=33) (actual time=273.074..52583.065 rows=22753 loops=1)
                                                  ->  Nested Loop  (cost=19.93..3160.00 rows=6 width=25) (actual time=125.215..6966.568 rows=18857 loops=1)
                                                        ->  Nested Loop  (cost=19.78..3158.98 rows=6 width=29) (actual time=125.182..6865.364 rows=27109 loops=1)
                                                              ->  Nested Loop  (cost=19.35..3146.38 rows=20 width=17) (actual time=99.297..2653.120 rows=33339 loops=1)
                                                                    Join Filter: (it.id = mi_idx.info_type_id)
                                                                    Rows Removed by Join Filter: 65728
                                                                    ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.019..0.022 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                                    ->  Nested Loop  (cost=19.35..3115.46 rows=2281 width=21) (actual time=99.271..2626.152 rows=99067 loops=1)
                                                                          ->  Hash Join  (cost=18.93..2457.50 rows=761 width=8) (actual time=55.715..112.945 rows=49145 loops=1)
                                                                                Hash Cond: (cc.subject_id = cct1.id)
                                                                                ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=12) (actual time=0.613..60.077 rows=135086 loops=1)
                                                                                ->  Hash  (cost=18.88..18.88 rows=4 width=4) (actual time=0.592..0.592 rows=1 loops=1)
                                                                                      Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                      ->  Seq Scan on comp_cast_type cct1  (cost=0.00..18.88 rows=4 width=4) (actual time=0.576..0.578 rows=1 loops=1)
                                                                                            Filter: ((kind)::text = 'crew'::text)
                                                                                            Rows Removed by Filter: 3
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.83 rows=3 width=13) (actual time=0.047..0.050 rows=2 loops=49145)
                                                                                Index Cond: (movie_id = cc.movie_id)
                                                                                Filter: ((info)::text < '8.5'::text)
                                                                                Rows Removed by Filter: 0
                                                              ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.62 rows=1 width=12) (actual time=0.109..0.125 rows=1 loops=33339)
                                                                    Index Cond: (movie_id = mi_idx.movie_id)
                                                                    Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                                                    Rows Removed by Filter: 5
                                                        ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.15..0.17 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=27109)
                                                              Index Cond: (id = cc.status_id)
                                                              Filter: ((kind)::text <> 'complete+verified'::text)
                                                              Rows Removed by Filter: 0
                                                  ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.21 rows=2 width=8) (actual time=2.097..2.418 rows=1 loops=18857)
                                                        Index Cond: (movie_id = mi_idx.movie_id)
                                                        Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                                        Rows Removed by Filter: 111
                                            ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=22753)
                                                  Index Cond: (id = mi.info_type_id)
                                                  Filter: ((info)::text = 'countries'::text)
                                                  Rows Removed by Filter: 0
                                      ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.46 rows=47 width=8) (actual time=0.375..0.437 rows=75 loops=15263)
                                            Index Cond: (movie_id = mi.movie_id)
                                ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=1138390)
                                      Index Cond: (id = mk.keyword_id)
                                      Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                      Rows Removed by Filter: 1
                          ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.15..0.17 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=8728)
                                Index Cond: (id = mc.company_type_id)
                                Heap Fetches: 8728
                    ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.707..0.707 rows=1 loops=8728)
                          Index Cond: (id = mk.movie_id)
                          Filter: (production_year > 2000)
                          Rows Removed by Filter: 0
              ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.15..0.17 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=5151)
                    Index Cond: (id = t.kind_id)
                    Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                    Rows Removed by Filter: 0
        ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.318..0.318 rows=1 loops=4955)
              Index Cond: (id = mc.company_id)
              Filter: ((country_code)::text <> '[us]'::text)
              Rows Removed by Filter: 0
Planning time: 639.547 ms
Execution time: 73221.932 ms
