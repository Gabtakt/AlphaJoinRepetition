  ->  Nested Loop  (cost=41.43..2491.15 rows=1 width=41) (actual time=507.504..74405.227 rows=8373 loops=1)
        ->  Nested Loop  (cost=41.01..2490.25 rows=2 width=45) (actual time=318.691..68777.804 rows=1151351 loops=1)
              ->  Nested Loop  (cost=40.58..2488.38 rows=1 width=61) (actual time=303.547..65019.846 rows=11455 loops=1)
                    ->  Nested Loop  (cost=40.16..2487.83 rows=1 width=46) (actual time=292.996..63936.629 rows=12102 loops=1)
                          ->  Nested Loop  (cost=40.01..2487.65 rows=1 width=50) (actual time=235.473..63874.707 rows=13361 loops=1)
                                Join Filter: (t.id = mi.movie_id)
                                ->  Nested Loop  (cost=39.58..2485.42 rows=1 width=42) (actual time=117.774..30888.216 rows=13568 loops=1)
                                      ->  Nested Loop  (cost=39.43..2485.24 rows=1 width=46) (actual time=68.655..30815.693 rows=14358 loops=1)
                                            ->  Nested Loop  (cost=39.00..2484.66 rows=1 width=21) (actual time=45.308..7159.617 rows=37899 loops=1)
                                                  ->  Nested Loop  (cost=38.85..2484.49 rows=1 width=25) (actual time=44.890..7003.462 rows=37899 loops=1)
                                                        ->  Nested Loop  (cost=38.42..2483.86 rows=1 width=13) (actual time=18.849..2873.361 rows=43896 loops=1)
                                                              ->  Nested Loop  (cost=38.28..2481.89 rows=12 width=17) (actual time=18.818..2460.969 rows=130197 loops=1)
                                                                    ->  Hash Join  (cost=37.85..2478.43 rows=4 width=4) (actual time=0.949..168.690 rows=68062 loops=1)
                                                                          Hash Cond: (cc.subject_id = cct1.id)
                                                                          ->  Hash Join  (cost=18.93..2457.50 rows=761 width=8) (actual time=0.469..126.527 rows=110494 loops=1)
                                                                                Hash Cond: (cc.status_id = cct2.id)
                                                                                ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=12) (actual time=0.426..50.968 rows=135086 loops=1)
                                                                                ->  Hash  (cost=18.88..18.88 rows=4 width=4) (actual time=0.014..0.014 rows=1 loops=1)
                                                                                      Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                      ->  Seq Scan on comp_cast_type cct2  (cost=0.00..18.88 rows=4 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                                                            Filter: ((kind)::text = 'complete'::text)
                                                                                            Rows Removed by Filter: 3
                                                                          ->  Hash  (cost=18.88..18.88 rows=4 width=4) (actual time=0.443..0.443 rows=1 loops=1)
                                                                                Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                ->  Seq Scan on comp_cast_type cct1  (cost=0.00..18.88 rows=4 width=4) (actual time=0.422..0.425 rows=1 loops=1)
                                                                                      Filter: ((kind)::text = 'cast'::text)
                                                                                      Rows Removed by Filter: 3
                                                                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.83 rows=3 width=13) (actual time=0.030..0.032 rows=2 loops=68062)
                                                                          Index Cond: (movie_id = cc.movie_id)
                                                                          Filter: ((info)::text < '8.5'::text)
                                                                          Rows Removed by Filter: 0
                                                              ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=130197)
                                                                    Index Cond: (id = mi_idx.info_type_id)
                                                                    Filter: ((info)::text = 'rating'::text)
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.62 rows=1 width=12) (actual time=0.083..0.093 rows=1 loops=43896)
                                                              Index Cond: (movie_id = mi_idx.movie_id)
                                                              Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                                              Rows Removed by Filter: 4
                                                  ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.15..0.17 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=37899)
                                                        Index Cond: (id = mc.company_type_id)
                                                        Heap Fetches: 37899
                                            ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.623..0.623 rows=0 loops=37899)
                                                  Index Cond: (id = mi_idx.movie_id)
                                                  Filter: (production_year > 2005)
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.15..0.17 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=14358)
                                            Index Cond: (id = t.kind_id)
                                            Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                            Rows Removed by Filter: 0
                                ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.21 rows=2 width=8) (actual time=2.182..2.430 rows=1 loops=13568)
                                      Index Cond: (movie_id = mi_idx.movie_id)
                                      Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                      Rows Removed by Filter: 134
                          ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=13361)
                                Index Cond: (id = mi.info_type_id)
                                Filter: ((info)::text = 'countries'::text)
                                Rows Removed by Filter: 0
                    ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.088..0.088 rows=1 loops=12102)
                          Index Cond: (id = mc.company_id)
                          Filter: ((country_code)::text <> '[us]'::text)
                          Rows Removed by Filter: 0
              ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.40 rows=47 width=8) (actual time=0.245..0.301 rows=101 loops=11455)
                    Index Cond: (movie_id = t.id)
        ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=1151351)
              Index Cond: (id = mk.keyword_id)
              Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
              Rows Removed by Filter: 1
Planning time: 684.347 ms
Execution time: 74438.185 ms
