  ->  Nested Loop  (cost=60.31..453.00 rows=1 width=118) (actual time=1097.573..2175.046 rows=38 loops=1)
        Join Filter: (ml.movie_id = mi.movie_id)
        ->  Nested Loop  (cost=59.88..451.60 rows=1 width=134) (actual time=921.247..1919.605 rows=92 loops=1)
              ->  Nested Loop  (cost=59.46..450.69 rows=2 width=138) (actual time=83.443..1822.429 rows=1868 loops=1)
                    Join Filter: (ml.movie_id = mk.movie_id)
                    ->  Nested Loop  (cost=59.02..448.74 rows=1 width=130) (actual time=82.959..1721.279 rows=483 loops=1)
                          Join Filter: (ml.movie_id = t.id)
                          ->  Nested Loop  (cost=58.59..448.13 rows=1 width=109) (actual time=71.603..916.378 rows=1152 loops=1)
                                ->  Hash Join  (cost=58.17..447.67 rows=1 width=94) (actual time=8.264..216.694 rows=4393 loops=1)
                                      Hash Cond: (mc.company_type_id = ct.id)
                                      ->  Nested Loop  (cost=39.25..428.33 rows=158 width=98) (actual time=7.784..213.020 rows=5069 loops=1)
                                            ->  Nested Loop  (cost=38.82..262.88 rows=42 width=86) (actual time=1.697..11.180 rows=2315 loops=1)
                                                  ->  Seq Scan on link_type lt  (cost=0.00..18.88 rows=1 width=86) (actual time=0.382..0.390 rows=2 loops=1)
                                                        Filter: ((link)::text ~~ '%follow%'::text)
                                                        Rows Removed by Filter: 16
                                                  ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=8) (actual time=0.768..4.949 rows=1158 loops=2)
                                                        Recheck Cond: (link_type_id = lt.id)
                                                        Heap Blocks: exact=191
                                                        ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.744..0.744 rows=1158 loops=2)
                                                              Index Cond: (link_type_id = lt.id)
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..3.92 rows=2 width=12) (actual time=0.083..0.086 rows=2 loops=2315)
                                                  Index Cond: (movie_id = ml.movie_id)
                                                  Filter: (note IS NULL)
                                                  Rows Removed by Filter: 2
                                      ->  Hash  (cost=18.88..18.88 rows=4 width=4) (actual time=0.430..0.430 rows=1 loops=1)
                                            Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                            ->  Seq Scan on company_type ct  (cost=0.00..18.88 rows=4 width=4) (actual time=0.419..0.421 rows=1 loops=1)
                                                  Filter: ((kind)::text = 'production companies'::text)
                                                  Rows Removed by Filter: 3
                                ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.158..0.158 rows=0 loops=4393)
                                      Index Cond: (id = mc.company_id)
                                      Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                      Rows Removed by Filter: 1
                          ->  Index Scan using title_pkey on title t  (cost=0.43..0.59 rows=1 width=21) (actual time=0.698..0.698 rows=0 loops=1152)
                                Index Cond: (id = mc.movie_id)
                                Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                Rows Removed by Filter: 1
                    ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.37 rows=47 width=8) (actual time=0.204..0.207 rows=4 loops=483)
                          Index Cond: (movie_id = mc.movie_id)
              ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.051..0.051 rows=0 loops=1868)
                    Index Cond: (id = mk.keyword_id)
                    Filter: ((keyword)::text = 'sequel'::text)
                    Rows Removed by Filter: 1
        ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.39 rows=1 width=4) (actual time=2.534..2.776 rows=0 loops=92)
              Index Cond: (movie_id = mk.movie_id)
              Filter: ((info)::text = ANY ('{Germany,German}'::text[]))
              Rows Removed by Filter: 32
Planning time: 446.778 ms
Execution time: 2176.232 ms
