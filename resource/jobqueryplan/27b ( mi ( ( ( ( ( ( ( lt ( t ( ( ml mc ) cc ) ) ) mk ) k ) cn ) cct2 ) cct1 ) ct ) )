  ->  Nested Loop  (cost=42.26..327.86 rows=1 width=118) (actual time=371.826..643.105 rows=247 loops=1)
        Join Filter: (ml.movie_id = mi.movie_id)
        ->  Nested Loop  (cost=41.82..326.35 rows=1 width=138) (actual time=294.054..531.058 rows=95 loops=1)
              ->  Nested Loop  (cost=41.40..325.90 rows=1 width=123) (actual time=274.803..463.485 rows=190 loops=1)
                    ->  Nested Loop  (cost=41.25..325.21 rows=4 width=127) (actual time=274.278..462.320 rows=190 loops=1)
                          Join Filter: (ml.movie_id = mc.movie_id)
                          ->  Nested Loop  (cost=40.82..324.64 rows=1 width=115) (actual time=257.114..444.724 rows=38 loops=1)
                                Join Filter: (ml.movie_id = t.id)
                                ->  Nested Loop  (cost=40.39..324.14 rows=1 width=94) (actual time=33.109..330.626 rows=77 loops=1)
                                      ->  Nested Loop  (cost=39.97..303.38 rows=47 width=98) (actual time=11.699..221.201 rows=2350 loops=1)
                                            Join Filter: (ml.movie_id = mk.movie_id)
                                            ->  Nested Loop  (cost=39.54..300.45 rows=1 width=90) (actual time=7.068..47.639 rows=189 loops=1)
                                                  ->  Nested Loop  (cost=39.39..300.27 rows=1 width=94) (actual time=7.049..46.805 rows=257 loops=1)
                                                        ->  Nested Loop  (cost=39.24..289.02 rows=66 width=98) (actual time=6.577..45.246 rows=257 loops=1)
                                                              ->  Nested Loop  (cost=38.82..262.88 rows=42 width=86) (actual time=2.432..14.993 rows=2315 loops=1)
                                                                    ->  Seq Scan on link_type lt  (cost=0.00..18.88 rows=1 width=86) (actual time=0.453..0.462 rows=2 loops=1)
                                                                          Filter: ((link)::text ~~ '%follow%'::text)
                                                                          Rows Removed by Filter: 16
                                                                    ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=8) (actual time=1.089..6.934 rows=1158 loops=2)
                                                                          Recheck Cond: (link_type_id = lt.id)
                                                                          Heap Blocks: exact=191
                                                                          ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=1.065..1.065 rows=1158 loops=2)
                                                                                Index Cond: (link_type_id = lt.id)
                                                              ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.60 rows=2 width=12) (actual time=0.006..0.013 rows=0 loops=2315)
                                                                    Index Cond: (movie_id = ml.movie_id)
                                                        ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.15..0.17 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=257)
                                                              Index Cond: (id = cc.subject_id)
                                                              Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                                                  ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.15..0.17 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=257)
                                                        Index Cond: (id = cc.status_id)
                                                        Filter: ((kind)::text = 'complete'::text)
                                                        Rows Removed by Filter: 0
                                            ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..2.35 rows=47 width=8) (actual time=0.890..0.912 rows=12 loops=189)
                                                  Index Cond: (movie_id = cc.movie_id)
                                      ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.046..0.046 rows=0 loops=2350)
                                            Index Cond: (id = mk.keyword_id)
                                            Filter: ((keyword)::text = 'sequel'::text)
                                            Rows Removed by Filter: 1
                                ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=1.481..1.481 rows=0 loops=77)
                                      Index Cond: (id = mk.movie_id)
                                      Filter: (production_year = 1998)
                                      Rows Removed by Filter: 1
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=2 width=12) (actual time=0.457..0.460 rows=5 loops=38)
                                Index Cond: (movie_id = mk.movie_id)
                                Filter: (note IS NULL)
                                Rows Removed by Filter: 1
                    ->  Index Scan using company_type_pkey on company_type ct  (cost=0.15..0.17 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=190)
                          Index Cond: (id = mc.company_type_id)
                          Filter: ((kind)::text = 'production companies'::text)
              ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.355..0.355 rows=0 loops=190)
                    Index Cond: (id = mc.company_id)
                    Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                    Rows Removed by Filter: 0
        ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.49 rows=1 width=4) (actual time=1.029..1.178 rows=3 loops=95)
              Index Cond: (movie_id = mk.movie_id)
              Filter: ((info)::text = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
              Rows Removed by Filter: 10
Planning time: 572.127 ms
Execution time: 652.908 ms
